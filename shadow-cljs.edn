{:deps      {:aliases [:dev]}                               ; Include the :dev alias so CLI can make compile-time only deps available
 :nrepl     {:port 9000}                                    ; Start an nREPL server on port 9000

 ; :dev-http  {8080 "resources/public"}                       ; Start an HTTP server on port 8080, serving files from resources/public
 :dev-http  {8080 "classpath:public"}                       ; Use the classpath to serve files from resources/public, int IntelliJ it is configured as a resource folder

 :builds    {:main {:target     :browser                    ; Build a browser target
                   :output-dir  "resources/public/js/main"  ; Node.js target would be "resources/public/js/main"
                   :asset-path  "/js/main"                  ; Path to the output files from the HTTP server relative to the server root
                    :dev        {:compiler-options {:external-config {:fulcro {:html-source-annotations? true}}}}

                   :modules     {:main        {:init-fn app.client/init
                                               :entries [app.client]}}                                  ; Get all the ClojureScript code from the app.client namespace and call the init function
                   :devtools    {:after-load  app.client/refresh                                        ; Call the init function after the code is loaded
                                 :preloads    [com.fulcrologic.fulcro.inspect.preload
                                               com.fulcrologic.fulcro.inspect.dom-picker-preload]}}}}   ; Load the Fulcro inspect tool for development debugging